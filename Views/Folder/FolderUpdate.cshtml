@model EntityLayer.Concrete.Folder

@{
    ViewData["Title"] = "Folder Update";
}

<h1>Folder Update</h1>
<hr />
<h2>@Html.DisplayFor(x => x.FolderName)</h2>

<div class="row">
    <div class="col-md-4" style="margin:auto">
        <form asp-action="FolderUpdate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="margin-bottom:15px;">
                <label asp-for="FolderID" class="control-label" hidden >ID</label>
                <input asp-for="FolderID" class="form-control" hidden />
                <span asp-validation-for="FolderID" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom:15px;">
                <label asp-for="FolderName" class="control-label">Name</label>
                <input asp-for="FolderName" class="form-control" />
                <span asp-validation-for="FolderName" class="text-danger"></span>
            </div>
            <div class="form-group" style="margin-bottom:15px;">
                <label asp-for="RootFolderID" class="control-label">Root Folder Name</label>
                @Html.DropDownListFor(x => x.RootFolderID, (List<SelectListItem>)ViewBag.Folders, new {@class = "form-control"})
                <span asp-validation-for="RootFolderID" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:flex; justify-content:space-between">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="GetFolders" class="btn btn-light">Back To Documents</a>
            </div>
        </form>
    </div>
</div>


